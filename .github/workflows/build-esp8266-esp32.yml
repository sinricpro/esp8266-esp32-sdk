name: Build for ESP8266 and ESP32

on:
  workflow_dispatch:
  pull_request:
    branches: [ master ]
    paths:
      - src/**
      - examples/**

jobs:
  build-esp8266-esp32:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example:
          - examples/ACUnit
          - examples/Blinds
          - examples/ContactSensor
          - examples/DimSwitch
          - examples/doorbell
          - examples/Fan
          - examples/GarageDoor
          - examples/Light/Light
          - examples/Lock/Lock
          - examples/Lock/Lock_with_feedback
          - examples/MotionSensor
          - examples/PowerSensor
          - examples/Relay/MultiRelays_advance
          - examples/Relay/Relay
          - examples/Speaker
          - examples/Switch/MultiSwitch_advance
          - examples/Switch/MultiSwitch_beginner
          - examples/Switch/MultiSwitch_intermediate
          - examples/Switch/Switch
          - examples/Thermostat
          - examples/TV
          - examples/OTAUpdate
          - examples/Health
          - examples/Settings/MultiWiFi
          - examples/AirQualitySensor/AirQualitySensor
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      
      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      
      - name: Set up Python
        uses: actions/setup-python@v3
      
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      
      - name: Install library dependencies
        run: |
          pio pkg install -l "bblanchon/ArduinoJson" -l "links2004/WebSockets" -g
      
      - name: Run build test using PlatformIO
        run: pio ci --lib="." -b esp12e -b esp32dev
        env:
          PLATFORMIO_CI_SRC: ${{ matrix.example }}

  build-camera-examples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example:
          - examples/Camera/motion-capture
          - examples/Camera/snapshot-camera
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      
      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      
      - name: Set up Python
        uses: actions/setup-python@v3
      
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      
      - name: Install library dependencies
        run: |
          pio pkg install -l "bblanchon/ArduinoJson" -l "links2004/WebSockets" -g
      
      - name: Run build test using PlatformIO
        run: pio ci --lib="." -b esp32dev
        env:
          PLATFORMIO_CI_SRC: ${{ matrix.example }}